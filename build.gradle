plugins {
    id 'groovy'
    id 'idea' // optional (to generate IntelliJ IDEA project files)
    id "org.ajoberstar.grgit" version "1.7.0"
}

apply plugin: 'java'

dependencies {
//    testImplementation 'com.palominolabs.gradle.task:gradle-git-clone-task:0.0.2'
//    implementation 'org.ajoberstar:grgit:1.7.0'
    //testImplementation 'org.ajoberstar:gradle-git:1.7.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.1'


    implementation project(':ecco-service')
    if (use_py4j_parser.toBoolean()) {
        println '> include py4j dependency'
        implementation group: 'net.sf.py4j', name: 'py4j', version: '0.10.9.2'
    }
    if (use_graalvm_parser.toBoolean()) {
        println '> include graalvm dependency'
        implementation group: 'org.graalvm.sdk', name: 'polyglot-tck', version: '21.3.0'
    }
}

ecco.adapter = true

sourceSets {
    main {
        if (!use_py4j_parser.toBoolean()) {
            java {
                exclude '**/py4j/**'
            }
        }
        if (!use_graalvm_parser.toBoolean()) {
            java {
                exclude '**/graalvm/**'
            }
            resources {
                exclude 'graalVM-config.properties'
            }
        }
    }
}

ospackage {
    requires('ecco-base', version, EQUAL)
    requires('ecco-service', version, EQUAL)
}

// clone integrationTest-repository from remote
import org.ajoberstar.grgit.*

def dataPath = 'src/integrationTest/resources/data'

task cloneIntegrationTestRepository {
    doLast{
        if(!file(dataPath).exists()){
            Grgit.clone(dir: file(dataPath), uri: 'https://github.com/MatthiasPreuner/ecco-adapter-python-test.git')
        }
    }
}
tasks.integrationTest.dependsOn("cloneIntegrationTestRepository")

repositories {
    mavenCentral()
}